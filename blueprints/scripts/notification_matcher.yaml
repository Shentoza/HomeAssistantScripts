blueprint:
  name: Notification Matcher
  domain: script
  author: Shentoza
  description: Matcht eine Liste an Personen, mit einer Liste an Geräten, die Benachrichtigungen erhalten sollen. Kann verwendet werden um einer Person eine Nachricht zu senden.
  input:
    people:
      name: People
      description: People die benachrichtigt werden sollen
      selector:
        entity:
          domain: person
          multiple: true
    tracking_devices:
      name: Geräte
      description: zu benachrichtigende Geräte
      selector:
        entity:
          domain: device_tracker
          multiple: true
variables:
  people: !input people
  tracking_devices: !input tracking_devices
  all_people_device_list: >
    {% set notifies = tracking_devices | map('regex_replace','^device_tracker\.','notify.mobile_app_') | list %}
    {{ zip(people,notifies) | list }}
  people_at_home: >
    {{ all_people_device_list | selectattr('0','in',states | selectattr('entity_id','in',people) | selectattr('state','eq','home') | map(attribute='entity_id') | list) | list }}

fields:
  modus:
    selector:
      select:
        options:
          - 'Alle'
          - 'Sortiert Zuhause'
          - 'Alle Zuhause'
          - 'Random'
          - 'Random Zuhause'
        multiple: false
    name: Modus
    required: true
    default: 'Sortiert Zuhause'
  message_data:
    selector:
      object: {}
    name: message_data
    default:
      title: Test-Titel
      message: Test-Nachricht
      data:
        notification_icon: mdi:air-filter
        tag: TEST_TAG
        alert_once: true
        actions:
          - action: TEST_ACTION
            title: Test Action Text

sequence:
  - if:
      - alias: "Zufällig bestimmen, oder mehrere Benachrichtigen?"
        condition: template
        value_template: "{{ modus in ['Random', 'Random Zuhause'] }}"
    then:
      - choose:
          - conditions: "{{ modus == 'Random Zuhause' and people_at_home | length > 0 }}"
            alias: "Random Person Zuhause, aber niemand da?"
            sequence:
              - variables:
                  selected_person: >
                    {{ people_at_home | random }}
          - conditions: "{{ modus == 'Random' }}"
            alias: "Random Person"
            sequence:
              - variables:
                  selected_person: >
                    {{ all_people_device_list | random }}
          - conditions: "{{ modus == 'Random Zuhause' and people_at_home | length <= 0 }}"
            alias: "Warten bis Person heim kommt?"
            sequence:
              - wait_for_trigger:
                  - platform: zone
                    entity_id: !input people
                    zone: zone.home
                    event: enter
              - variables:
                  triggered_person: "{{ wait.trigger.entity_id }}"
                  selected_person: >
                    {% set personIndex = people.index(triggered_person) %}
                    {{ all_people_device_list[personIndex][1] if personIndex != -1 else None }}
      - service: >
          {{ selected_person[1] }}
        data: "{{ message_data }}"
        alias: "Benachrichtige zufällig ausgewählte Person"
    else:
    - if:
        - condition: template
          alias: "Niemand zuhause, aber Modus Zuhause?"
          value_template: "{{ modus in ['Alle Zuhause', 'Sortiert Zuhause'] and people_at_home | length <= 0 }}"
      then:
        - wait_for_trigger:
            - platform: zone
              entity_id: !input people
              zone: zone.home
              event: enter
    - repeat:
        sequence:
          - condition: >
              {% if modus in ['Alle Zuhause', 'Sortiert Zuhause'] %}
                {{ is_state(all_people_device_list[repeat.index-1][0],'home') }}
              {% else %}
                true
              {% endif %}
          - service: >
              {{ all_people_device_list[repeat.index-1][1] }}
            data: "{{ message_data }}"
        until: >
          {% if modus == 'Sortiert Zuhause' %}
            {{ is_state(all_people_device_list[repeat.index-1][0],'home') }}
          {% else %}
            {{ repeat.index >= all_people_device_list | length }}
          {% endif %}
mode: single